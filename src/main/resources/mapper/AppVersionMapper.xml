<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.AppVersionDao">

	<!-- 可根据自己的需求，是否要使用 -->
	<resultMap type="xin.cymall.entity.AppVersion" id="appAppVerMap">
		<result property="id" column="id"/>
		<result property="appId" column="app_id"/>
		<result property="appName" column="app_name"/>
		<result property="appIcon" column="app_icon"/>
		<result property="appType" column="app_type"/>
		<result property="appOutverno" column="app_outverno"/>
		<result property="appInnerverno" column="app_innerverno"/>
		<result property="appUpdcms" column="app_updcms"/>
		<result property="appUrl" column="app_url"/>
		<result property="appStatus" column="app_status"/>
		<result property="appPubstatus" column="app_pubstatus"/>
		<result property="appQr" column="app_qr"/>
		<result property="appUpdcount" column="app_updcount"/>
		<result property="appOprauser" column="app_oprauser"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
		<result property="isDelete" column="is_delete"/>
	</resultMap>
	
	<!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            and t.is_delete = '0'
            <if test="id != null"> and t.id = #{id} </if>
            <if test="appId != null"> and t.app_id = #{appId} </if>
			<if test="appType != null and appType.trim() != ''"> and t.app_type = #{appType} </if>
			<if test="appName != null and appName.trim() != ''"> and a.app_name like concat(concat('%',#{appName}),'%')</if>
			<if test="sysUser != null"> and t.app_id in (select sapp.app_id from sys_user_app sapp where sapp.user_id = #{sysUser})</if>
        </where>
    </sql>
	<sql id="leftJoinCl">
		left join app_baseinfo a on a.id = t.app_id
	</sql>
    <!--left join sys_user_app sap on sap.app_id = a.id-->
    <select id="queryObject" resultMap="appAppVerMap">
		select t.*,a.app_name,a.app_icon
		from app_version t
		<include refid="leftJoinCl"/>
		where t.is_delete = '0' and t.id = #{value}
	</select>

	<select id="queryLastAppVer" resultMap="appAppVerMap">
		select ts.* from (
		select tt.*,rownum as rn from (
			select t.*,a.app_name,a.app_icon
			from app_version t
			<include refid="leftJoinCl"/>
			where t.APP_ID = #{appId} and t.APP_TYPE = #{appType} and t.APP_PUBSTATUS = '1' and t.is_delete = '0'
			order by t.APP_INNERVERNO desc
		) tt) ts
		where ts.rn between 0 and 1
	</select>

	<select id="queryList" resultMap="appAppVerMap">
		select tt.* from (
		select ts.*,rownum as rn from (
			select
			t.id,
			t.app_id,
			a.app_name,
			a.app_icon,
			t.app_type,
			t.app_outverno,
			t.app_innerverno,
			t.app_updcms,
			t.app_url,
			t.app_status,
			t.app_pubstatus,
			t.app_oprauser,
			t.app_qr,
			t.app_updcount,
			t.is_delete,
			to_char(t.create_time,'yyyy-MM-dd HH24:mi:ss') as create_time,
			to_char(t.update_time,'yyyy-MM-dd HH24:mi:ss') as update_time
			from APP_VERSION t
			<include refid="leftJoinCl"/>
			<include refid="where_clause" />
	        <choose>
	            <when test="sidx != null and sidx.trim() != ''">
	                order by ${sidx} ${order}
	            </when>
				<otherwise>
	                order by id desc
				</otherwise>
	        </choose>
        ) ts ) tt
        <where>
			<if test="offset != null and limit != null">
				and tt.rn between #{offset} and #{offend}
			</if>
        </where>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from APP_VERSION t
		<include refid="leftJoinCl"/>
		<include refid="where_clause" />
	</select>
	
	<select id="findByVerify" resultMap="appAppVerMap">
		select t.* from APP_VERSION t
		<where>
			and t.is_delete = '0'
		    <if test="id != null"> and t.id &lt;&gt; #{id}</if>
			<if test="appId != null">and t.app_id = #{appId}</if>
			<if test="(appOutverno != null and appOutverno.trim() != '') or (appInnerverno != null and appInnerverno.trim() != '')">
			and (t.app_outverno = #{appOutverno} or t.app_innerverno = #{appInnerverno})
			</if>
		</where>
	</select>
	
	<insert id="save" parameterType="xin.cymall.entity.AppVersion" keyProperty="id">
		<selectKey resultType="Long" order="BEFORE" keyProperty="id">
            SELECT seq_app_version.NEXTVAL as id from DUAL
        </selectKey>
		insert into app_version
		(
			id,
			app_id,
			app_type,
			app_outverno,
			app_innerverno,
			app_updcms,
			app_url,
			app_status,
			app_pubstatus,
			app_oprauser,
			app_qr,
			create_time,
			update_time,
			is_delete
		)
		values
		(	
			#{id},
			#{appId},
			#{appType},
			#{appOutverno},
			#{appInnerverno},
			#{appUpdcms},
			#{appUrl},
			#{appStatus},
			#{appPubstatus},
			#{appOprauser},
			#{appQr},
			to_date(to_char(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss'),
			to_date(to_char(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss'),
			'0'
		)
	</insert>
	
	<update id="update" parameterType="xin.cymall.entity.AppVersion">
		update APP_VERSION set
		APP_ID = #{appId},
		APP_TYPE = #{appType},
		APP_OUTVERNO = #{appOutverno},
		APP_INNERVERNO = #{appInnerverno},
		APP_UPDCMS = #{appUpdcms},
		APP_URL = #{appUrl},
		APP_STATUS = #{appStatus},
		APP_PUBSTATUS = #{appPubstatus},
		APP_QR = #{appQr},
		APP_OPRAUSER = #{appOprauser},
		UPDATE_TIME = to_date(to_char(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss')
		where id = #{id}
	</update>
	
	<update id="updateStatusBatch">
		update APP_VERSION set APP_PUBSTATUS = #{value} where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

    <update id="updDownCount">
        update APP_VERSION set APP_UPDCOUNT = APP_UPDCOUNT + 1 where id = #{id}
    </update>
	
	<delete id="delete">
		update APP_VERSION set is_delete = '1' where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		update APP_VERSION set is_delete = '1' where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
</mapper>