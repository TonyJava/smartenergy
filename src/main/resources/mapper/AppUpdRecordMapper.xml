<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.AppUpdRecordDao">

	<!-- 可根据自己的需求，是否要使用 -->
	<resultMap type="xin.cymall.entity.AppUpdRecord" id="appAppRecMap">
		<result property="id" column="id"/>
		<result property="appId" column="app_id"/>
		<result property="appName" column="app_name"/>
		<result property="appType" column="app_type"/>
		<result property="appOutverno" column="app_outverno"/>
		<result property="appInnerverno" column="app_innerverno"/>
		<result property="appDownurl" column="app_downurl"/>
		<result property="ipAddr" column="ip_addr"/>
		<result property="pyAddr" column="py_addr"/>
		<result property="mobileType" column="mobile_type"/>
		<result property="downUser" column="down_user"/>
		<result property="downUsername" column="down_username"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="id != null"> and t.id = #{id} </if>
            <if test="appId != null"> and t.app_id = #{appId} </if>
			<if test="appType != null and appType.trim() != ''"> and t.app_type = #{appType} </if>
			<if test="appName != null and appName.trim() != ''"> and a.app_name like concat(concat('%',#{appName}),'%')</if>
        </where>
    </sql>
	<sql id="leftJoinCl">
		left join app_baseinfo a on a.id = t.app_id
	</sql>
    <!--left join sys_user_app sap on sap.app_id = a.id-->
    <select id="queryObject" resultMap="appAppRecMap">
		select t.*
		from APP_UPDRECORD t
		where t.id = #{value}
	</select>

	<select id="queryList" resultMap="appAppRecMap">
		select tt.* from (
		select ts.*,rownum as rn from (
			select
			t.ID,
			t.APP_ID,
			t.APP_NAME,
			t.APP_TYPE,
			t.APP_INNERVERNO,
			t.APP_OUTVERNO,
			t.APP_DOWNURL,
			t.IP_ADDR,
			t.PY_ADDR,
			t.DOWN_USER,
			t.DOWN_USERNAME,
			t.MOBILE_TYPE,
			to_char(t.create_time,'yyyy-MM-dd HH24:mi:ss') as create_time,
			to_char(t.update_time,'yyyy-MM-dd HH24:mi:ss') as update_time from APP_UPDRECORD t
			<include refid="where_clause" />
	        <choose>
	            <when test="sidx != null and sidx.trim() != ''">
	                order by ${sidx} ${order}
	            </when>
				<otherwise>
	                order by id desc
				</otherwise>
	        </choose>
        ) ts ) tt
        <where>
			<if test="offset != null and limit != null">
				and tt.rn between #{offset} and #{offend}
			</if>
        </where>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from APP_UPDRECORD t
		<include refid="where_clause" />
	</select>

	<insert id="save" parameterType="xin.cymall.entity.AppVersion" keyProperty="id">
		<selectKey resultType="Long" order="BEFORE" keyProperty="id">
            SELECT seq_app_version.NEXTVAL as id from DUAL
        </selectKey>
		insert into APP_UPDRECORD
		(
			ID,
			APP_ID,
			APP_NAME,
			APP_TYPE,
			APP_INNERVERNO,
			APP_OUTVERNO,
			APP_DOWNURL,
			IP_ADDR,
			PY_ADDR,
			DOWN_USER,
			DOWN_USERNAME,
			MOBILE_TYPE,
			create_time,
			update_time
		)
		values
		(	
			#{id},
			#{appId},
			#{appName},
			#{appType},
			#{appInnerverno},
			#{appOutverno},
			#{appDownurl},
			#{ipAddr},
			#{pyAddr},
			#{downUser},
			#{downUsername},
			#{mobileType},
			to_date(to_char(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss'),
			to_date(to_char(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss')
		)
	</insert>
</mapper>